// Automatically generated by MockGen. DO NOT EDIT!
// Source: go.uber.org/yarpc/peer/x/hashring (interfaces: EventHandler)

package hashring

import gomock "github.com/golang/mock/gomock"

// Mock of EventHandler interface
type MockEventHandler struct {
	ctrl     *gomock.Controller
	recorder *_MockEventHandlerRecorder
}

// Recorder for MockEventHandler (not exported)
type _MockEventHandlerRecorder struct {
	mock *MockEventHandler
}

func NewMockEventHandler(ctrl *gomock.Controller) *MockEventHandler {
	mock := &MockEventHandler{ctrl: ctrl}
	mock.recorder = &_MockEventHandlerRecorder{mock}
	return mock
}

func (_m *MockEventHandler) EXPECT() *_MockEventHandlerRecorder {
	return _m.recorder
}

func (_m *MockEventHandler) RingChanged(_param0 RingChange) {
	_m.ctrl.Call(_m, "RingChanged", _param0)
}

func (_mr *_MockEventHandlerRecorder) RingChanged(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RingChanged", arg0)
}

func (_m *MockEventHandler) RingChecksum(_param0 RingChecksum) {
	_m.ctrl.Call(_m, "RingChecksum", _param0)
}

func (_mr *_MockEventHandlerRecorder) RingChecksum(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RingChecksum", arg0)
}
